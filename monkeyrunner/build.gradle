group = 'com.android.tools'
archivesBaseName = 'monkeyrunner'

dependencies {
    compile project(':base:common')
    compile project(':base:sdklib')
    compile project(':base:ddmlib')
    compile project(':swt:chimpchat')
    compile project(':swt:hierarchyviewer2lib')

    // Specific prebuilts and external libs used by mr.
    compile 'com.google.jsilver:jsilver:1.0.0'
    compile 'org.python:jython-standalone:2.5.3'

    testCompile 'junit:junit:3.8.1'
}

sourceSets {
    main.resources.srcDir 'src/main/java'
    test.resources.srcDir 'src/test/java'
}

task monkeyrunnerStartScripts(type: CreateStartScripts) {
    classpath = project.getTasks().getAt(JavaPlugin.JAR_TASK_NAME).getOutputs().getFiles()
    outputDir new File(project.getBuildDir(), 'scripts')
    description 'Creates OS specific scripts to start monkeyrunner'
    mainClassName = 'com.android.monkeyrunner.MonkeyRunnerStarter'
    applicationName = 'monkeyrunner'
    unixStartScriptGenerator.template = resources.text.fromFile('etc/monkeyrunner')
    windowsStartScriptGenerator.template = resources.text.fromFile('etc/monkeyrunner.bat')
}


sdk {
    common(mac, linux) {
        item(new File(monkeyrunnerStartScripts.outputDir, 'monkeyrunner')) {
            into 'bin'
            builtBy 'monkeyrunnerStartScripts'
        }
    }
    windows {
        item(new File(monkeyrunnerStartScripts.outputDir, 'monkeyrunner.bat')) {
            into 'bin'
            builtBy 'monkeyrunnerStartScripts'
        }
    }
}


// configure the manifest of the buildDistributionJar task.
sdkJar.manifest.attributes('Main-Class': 'com.android.monkeyrunner.MonkeyRunnerStarter')

